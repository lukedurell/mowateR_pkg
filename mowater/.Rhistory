#- [2] server: defines inputs and outputs ---------------------------------------------------
server <- function(input, output) {
# Histogram of the Old Faithful Geyser Data ----
# with requested number of bins
# This expression that generates a histogram is wrapped in a call
# to renderPlot to indicate that:
#
# 1. It is "reactive" and therefore should be automatically
#    re-executed when inputs (input$bins) change
# 2. Its output type is a plot
output$distPlot <- renderPlot({
data <- unlist(c(dplyr::select(eml, input$var)))
Depth <- seq(0, 10, length.out = 21)
xdata <- data[1:21]
sd <- sd(xdata)
minimum <- min(xdata) - (6*sd)
maximum <- max(xdata) + (6*sd)
plot(xdata, Depth, type = "l", ylim = rev(range(Depth)),
col = rgb(0,0,0.5,alpha = .3), xlab = input$var,
xlim = c(minimum, maximum))
for (i in 2:input$obs) {
end   <- i * 21
start <- end - 20
xdata <- data[start:end]
lines(xdata, Depth, col = rgb(0,0,0.5,alpha = .2))
}
if (input$mean_fun == TRUE) {
matt <- matrix(ncol = 21, nrow = input$obs)
for (i in 1:input$obs) {
end   <- i * 21
start <- end - 20
matt[i, 1:21] <- data[start:end]
}
mean_vals <- apply(matt, 2, mean)
lines(mean_vals, Depth, lwd = 3)
}
})
}
#- [3] employ shiny app --------------------------------------------------
shinyApp(ui, server)
lift <- readRDS("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/LIFT 2019_Process Data_5m_Jan-Apr.rds")
lift
View(lift)
lift
str(lift)
lift$chr
lift
lift[[1]]
lift[1]
lift[2
]
plot(llift)
plot(lift)
lift
week_eml <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/Week_EML_Data.csv")
View(week_eml)
dim(week_eml)
full_eml <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/EML_through_09_12_2019.csv")
View(full_eml)
dim(full_eml)
small_eml <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/EML_on_04_25_2019.csv")
dim(small_eml)
View(small_eml)
urb_rur <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/urban-vs-rural-improved-water-access.csv")
dim(urb_rur)
View(urb_rur)
statewide <- read.table("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/statewide.txt")
View(statewide)
statewide <- read.delim("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/statewide.txt")
View(statewide)
statewide <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/statewide.txt")
statewide
View(statewide)
col_tds <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/colorado_tds.csv")
View(col_tds)
dim(col_tds)
covid <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/covid-2020-03-09.csv")
View(covid)
dim(covid)
doc_base <- readRDS("")
doc_base <- readRDS("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/DOC_baseFlow_weightedAvg_and_predictors.RData")
load("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/DOC_baseFlow_weightedAvg_and_predictors.RData")
View(DOC_baseFlow_weightedAvg_and_predictors)
dim(DOC_baseFlow_weightedAvg_and_predictors)
stress <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/freshwater-withdrawals-as-a-share-of-internal-resources.csv")
View(stress)
dim(stress)
load("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/predictors.Rdata")
View(predictors)
dim(ptype)
ptype
rm(list=ls())
load("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/predictors.Rdata")
length(date.ind)
View(date.ind)
dim(Twb.prof)
View(Twb.prof)
mines <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/Mines_Park_pH_Fault.csv")
dim(mines)
View(mines)
maacs <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/maacs.csv")
View(maacs)
dim(maacs)
precip_p <-
precip_s <- readRDS("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/precip-stations.rds")
precip_p <- readRDS("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/precip-precip.rds")
precip_s <- readRDS("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/precip-stations.rds")
dim(precip_s)
dim(precip_p)
View(precip_p)
View(Twb.prof)
View(precip_s)
usgs <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/dataset overview/canvas data/USGS_DOC.csv")
View(usgs)
readRDS("/Users/lukedurell/Desktop/DenverWater_Filtration.rda")
load("/Users/lukedurell/Desktop/DenverWater_Filtration.rda")
View(filter_11)
View(filter_15)
load("/Users/lukedurell/Desktop/roenergyMoWater.rda")
rm(list=ls())
load("/Users/lukedurell/Desktop/roenergyMoWater.rda")
View(fulldata)
#- [0] dependencies & data --------------------------------------------------
library(tidyverse)
library(Morpho)
data <- read.table("/Users/lukedurell/Desktop/dental.txt")
names(data) <- c("obs", "id", "age", "dist", "gender")
wide_dat <- pivot_wider(data[,-1], names_from = age, values_from = dist)
names(wide_dat)[3:6] <- c("age1", "age2", "age3", "age4")
#- gender == 0
wide_dat %>%
dplyr::filter(gender == 0) %>%
dplyr::select(-c(id, gender)) %>%
cov()
wide_dat %>%
dplyr::filter(gender == 0) %>%
dplyr::select(-c(id, gender)) %>%
summary()
wide_dat %>%
dplyr::filter(gender == 0) %>%
dplyr::select(-c(id, gender)) %>%
cor()
#- gender == 1
wide_dat %>%
dplyr::filter(gender == 1) %>%
dplyr::select(-c(id, gender)) %>%
cov()
wide_dat %>%
dplyr::filter(gender == 1) %>%
dplyr::select(-c(id, gender)) %>%
summary()
wide_dat %>%
dplyr::filter(gender == 1) %>%
dplyr::select(-c(id, gender)) %>%
cor()
#- [2] center and scale by age and gender --------------------------------------------------
cent_dat <- wide_dat %>%
group_by(gender) %>%
mutate(csage1 = (age1 - mean(age1))/sd(age1),
csage2 = (age2 - mean(age2))/sd(age2),
csage3 = (age3 - mean(age3))/sd(age3),
csage4 = (age4 - mean(age4))/sd(age4))
head(cent_dat)
#- [3] pooled cov and corr matrices --------------------------------------------------
#- covariance matrix
pool_cov <- covW(wide_dat[,-c(1,2)], groups = as.factor(wide_dat$gender))
#- build correlation matrix
vars <- diag(pool_cov)
pool_cor <- matrix(nrow = dim(pool_cov)[1], ncol = dim(pool_cov)[2])
for (i in 1:dim(pool_cov)[1]) {
for (j in 1:dim(pool_cov)[2]) {
pool_cor[i,j] <- pool_cov[i,j] / sqrt(pool_cov[i,i]*pool_cov[j,j])
}
}
rownames(pool_cor) <- c("age1", "age2", "age3", "age4")
colnames(pool_cor) <- c("age1", "age2", "age3", "age4")
pool_cov
pool_cor
#- [4] autocorrelations --------------------------------------------------
pair1_lag1 <- cent_dat %>%
dplyr::select(c(age1, age2, age3))
cent_dat
ent_dat %>%
dplyr::select(c(age1, age2, age3))
cent_dat %>%
dplyr::select(c(age1, age2, age3))
#- [2] center and scale by age and gender --------------------------------------------------
cent_dat <- wide_dat %>%
group_by(gender) %>%
mutate(csage1 = (age1 - mean(age1))/sd(age1),
csage2 = (age2 - mean(age2))/sd(age2),
csage3 = (age3 - mean(age3))/sd(age3),
csage4 = (age4 - mean(age4))/sd(age4)) %>%
ungroup()
cent_dat %>%
dplyr::select(c(age1, age2, age3))
cent_dat %>%
group_by(gender) %>%
dplyr::select(c(age1, age2, age3))
cent_dat %>%
group_by(gender) %>%
dplyr::select(c(csage1, csage2, csage3)) %>%
pivot_longer(cols = c(csage1, csage2, csage3))
pair2_lag1 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(csage2, csage3, csage4)) %>%
pivot_longer(cols = c(csage2, csage3, csage4))
pair2_lag1 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(csage2, csage3, csage4)) %>%
pivot_longer(cols = c(csage2, csage3, csage4))
pair2_lag1
pair2_lag1 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage2, csage3, csage4)) %>%
pivot_longer(cols = c(csage2, csage3, csage4))
pair2_lag1
pair1_lag1$value
pair1_lag1
pair1_lag1
#- [4] autocorrelations --------------------------------------------------
pair1_lag1 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage1, csage2, csage3)) %>%
pivot_longer(cols = c(csage1, csage2, csage3))
pair1_lag1
pair1_lag1$value
pair1_lag1 %>%
dplyr::filter(gender == 0) %>%
select(value)
pair1_lag1 %>%
dplyr::filter(gender == 0) %>%
ungroup() %>%
select(value)
pair1_lag1 %>%
dplyr::filter(gender == 0) %>%
ungroup() %>%
select(value) %>%
cov
pair1_lag1 %>%
dplyr::filter(gender == 0) %>%
ungroup() %>%
select(value) %>%
cor()
pair1_lag1 %>%
dplyr::filter(gender == 0) %>%
ungroup() %>%
select(value)
cor(filter(pair1_lag1$value, gender == 0), filter(pair2_lag1$value, gender == 0))
cor(dplyr::filter(pair1_lag1$value, gender == 0), dplyr::filter(pair2_lag1$value, gender == 0))
dplyr::filter(pair1_lag1$value, gender == 0)
dplyr::filter(pair1_lag1, gender == 0)
dplyr::filter(pair1_lag1, gender == 0)$value
cor(dplyr::filter(pair1_lag1, gender == 0)$value, dplyr::filter(pair2_lag1, gender == 0)$value)
cor(dplyr::filter(pair1_lag1, gender == 1)$value, dplyr::filter(pair2_lag1, gender == 1)$value)
#- [4] autocorrelations --------------------------------------------------
#- lag 1 data
pair1_lag1 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage1, csage2, csage3)) %>%
pivot_longer(cols = c(csage1, csage2, csage3))
pair2_lag1 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage2, csage3, csage4)) %>%
pivot_longer(cols = c(csage2, csage3, csage4))
head(pair1_lag1)
head(pair2_lag1)
#- correlation for lag 1
cor(dplyr::filter(pair1_lag1, gender == 0)$value, dplyr::filter(pair2_lag1, gender == 0)$value)
head(pair1_lag1)$value
head(pair2_lag1)$value
#- correlation for lag 1
cor(dplyr::filter(pair1_lag1, gender == 0)$value, dplyr::filter(pair2_lag1, gender == 0)$value)
cor(dplyr::filter(pair1_lag1, gender == 1)$value, dplyr::filter(pair2_lag1, gender == 1)$value)
#- lag 2 data
pair1_lag2 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage1, csage2)) %>%
pivot_longer(cols = c(csage2, csage3))
#- lag 2 data
pair1_lag2 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage1, csage2, csage3)) %>%
pivot_longer(cols = c(csage1, csage2))
pair1_lag2
#- lag 2 data
pair1_lag2 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage1, csage2, csage3)) %>%
pivot_longer(cols = c(csage1, csage2))
pair2_lag2 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage2, csage3, csage4)) %>%
pivot_longer(cols = c(csage3, csage4))
head(pair1_lag2)
head(pair2_lag2)
#- correlation for lag 1
cor(dplyr::filter(pair1_lag2, gender == 0)$value, dplyr::filter(pair2_lag2, gender == 0)$value)
cor(dplyr::filter(pair1_lag2, gender == 1)$value, dplyr::filter(pair2_lag2, gender == 1)$value)
head(pair1_lag2)$value
head(pair2_lag2)$value
head(pair1_lag2$value)
#- lag 3 data
pair1_lag3 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage1, csage2, csage3)) %>%
pivot_longer(cols = c(csage1))
pair2_lag3 <- cent_dat %>%
group_by(gender) %>%
dplyr::select(c(gender, csage2, csage3, csage4)) %>%
pivot_longer(cols = c(csage4))
head(pair1_lag3)$value
head(pair2_lag3)$value
#- correlation for lag 2
cor(dplyr::filter(pair1_lag3, gender == 0)$value, dplyr::filter(pair2_lag3, gender == 0)$value)
cor(dplyr::filter(pair1_lag3, gender == 1)$value, dplyr::filter(pair2_lag3, gender == 1)$value)
x <- 1:10
y <- 0:1/10
y
x
y <- seq(0, 1, by = 0.1)/10
y
y <- seq(0, .11, length.out = 10)
y
y <- seq(0, 1, length.out = 10)
y
plot(x, y)
plot(x, y)
y <- seq(0.1, .9, length.out = 10)
y
y <- (y / (1 - y))
plot(x, y)
plot(x, log(y))
plot(x, y)
plot(x, log(y))
plot(x, y)
plot(x, log(y))
y <- (y / (1 - y))
plot(x, y)
plot(x, y)
plot(x, log(y))
x <- 1:10
y <- seq(0.1, .9, length.out = 10)
y <- (y / (1 - y))
plot(x, y)
plot(x, log(y))
x <- 1:10
y <- seq(0.1, .5, length.out = 10)
y <- (y / (1 - y))
plot(x, y)
plot(x, log(y))
x <- 1:100
y <- seq(0.1, .99, length.out = 100)
y <- (y / (1 - y))
plot(x, y)
plot(x, log(y))
plot(x, y)
plot(x, log(y))
plot(x, y)
plot(x, log(y))
plot(x, y)
plot(x, log(y))
y <- rnorm(100)
y
y <- rnorm(100, 2)
y
plot(x, y)
y <- rnorm(100, 2) + seq(0, 2, length.out = 100)
plot(x, y)
x <- 1:100
y <- rnorm(100, 1) + seq(0, 3, length.out = 100)
plot(x, y)
x <- 1:100
y <- rnorm(100) + seq(0, 3, length.out = 100)
plot(x, y)
x <- 1:100
y <- rnorm(100) + seq(0, 3, length.out = 100)
plot(x, y)
plot(x, (1 / (1 + exp(-y))))
x <- 1:100
y <- rnorm(100, 10) + seq(0, 300, length.out = 100)
plot(x, y)
plot(x, (1 / (1 + exp(-y))))
beta <- /0001
beta <- .0001
plot(x, (1 / (1 + exp(-y*beta))))
plot(x, (1 / (1 + exp(-(y*beta)))))
x <- 1:100
y <- rnorm(100, 10) + seq(0, 300, length.out = 100)
plot(x, y)
beta <- .0001
plot(x, (1 / (1 + exp(-(y*beta)))))
(1 / (1 + exp(-(y*beta))))
beta <- .01
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .1
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .01
plot(x, (1 / (1 + exp(-(y*beta)))))
x <- 1:100
y <- rnorm(100, 10) + seq(0, 300, length.out = 100)
plot(x, y)
beta <- .01
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .1
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .5
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .00001
plot(x, (1 / (1 + exp(-(y*beta)))))
y <- rnorm(100, 10) + seq(0, 300, length.out = 100)
y
beta <- .5
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .4
beta <- .4
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .01
plot(x, (1 / (1 + exp(-(y*beta)))))
beta <- .1
plot(x, (1 / (1 + exp(-(y*beta)))))
14 + 31 + 22 + 19 + 1 + 32 + 29 + 14 + 46
208 - 180
2 + 1+ 2 + 1+ 1+2+1+1+3
rm(list=ls())
#install.packages("devtools")
#library(devtools)
#install_github("lukedurell/mowater") #This can take some time.
library(mowater)
library(lubridate)
data <- boulder_ammonia
class(data)
dim(data)
colnames(data)
head(data)
data("boulder_ammonia")
class(data)
dim(data)
colnames(data)
#install.packages("devtools")
#library(devtools)
#install_github("lukedurell/mowater") #This can take some time.
library(mowater)
library(lubridate)
data("boulder_ammonia")
datt <- boulder_ammonia
data("boulder_ammonia")
rm(list=ls())
iris
eml
data(package = "mowater")
rm(list=ls())
library(devtools)
library(mowater)
?mowater
mines_fault
View(mines_fault)
?eml
?mines_fault
?eml
#--------------------------------------------------------------
#- Filename: cloth_filter_package_prep.R
#- Author: luke
#- Date: 12/02/2020
#- Description: get cloth filter data ready for package
#--------------------------------------------------------------
library(lubridate)
library(stringr)
#- load data (the flow_data has all the influent effluent sets..)
lab <- readRDS("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/datasets/cloth_filter/clean/clean_lab_data.rda")
#- load data (the flow_data has all the influent effluent sets..)
lab <- readRDS("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/datasets/cloth_filter/clean/clean_lab_data.rda")
daily_averages_online <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/datasets/cloth_filter/clean/daily_averages_online.csv")
full_data <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/datasets/cloth_filter/clean/full_data.csv")[,-1]
joined_lab_online_data <- read.csv("/Users/lukedurell/Box Sync/education/teaching/20FA datascience/datasets/cloth_filter/clean/joined_lab_online_data.csv")
View(full_data)
rm(list=ls())
getwd()
install.packages("lubridate")
install.packages("ggplot2")
install.packages("data.table")
install.packages("ggrepel")
install.packages("dplyr")
install.packages("tidyverse")
install.packages("ggmap")
library(ggmap)
google <- get_map(location = c(-64.4,45.08), zoom = 10, maptype = "satellite")
?register_google
ggmap_show_api_key()
ggmap_show_api_key()
rm(list=ls())
remove.packages("mowater")
devtools::install_github("lukedurell/mowater_pkg", subdir = "mowater")
devtools::install_github("lukedurell/mowater")
setwd("/Users/lukedurell/Box Sync/education/teaching/mowateR_pkg/mowater")
library(devtools)
library(roxygen2)
document()
setwd("/Users/lukedurell/Box Sync/mowater_pkg/mowater")
document
document()
document()
mowater
?mowater
check()
document()
check()
superior_aeration
document()
use_mit_license(name = "Luke Durell")
document()
check()
